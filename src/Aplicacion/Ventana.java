/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import Arbol.Expresion;
import Arbol.Nodo;
import Arbol.RecorrerAst;
//import static Arbol.RecorrerAst.imprimir;
import FaseCompilador.Lexico;
import static FaseCompilador.Lexico.listaError;
import FaseCompilador.Sintactico;
import static FaseCompilador.Sintactico.ErrorSintactico;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author edi
 */
public class Ventana extends javax.swing.JFrame {
public static ArrayList<Expresion> imprimir = new ArrayList(); 
 public static String resultado;
 JFileChooser seleccionar = new JFileChooser();
    public static File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEjecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEdicion = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        btnAbrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEjecutar.setText("Ejecutar");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });

        txtEdicion.setColumns(20);
        txtEdicion.setRows(5);
        jScrollPane1.setViewportView(txtEdicion);

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane2.setViewportView(txtConsola);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btnAbrir)
                        .addGap(99, 99, 99)
                        .addComponent(btnEjecutar)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEjecutar)
                    .addComponent(btnAbrir))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed

        this.Ejecutar();


    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
     this.Open();
    }//GEN-LAST:event_btnAbrirActionPerformed

    public void Open() {

          //  archivo = new File("/home/edi/Descargas");
            seleccionar.setCurrentDirectory(archivo);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos", "txt");
            if (seleccionar.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
                seleccionar.setFileFilter(filtro);
                archivo = seleccionar.getSelectedFile();
                if (archivo.canRead()) {
                    String documento = LeerArchivo(archivo.getPath());
                      txtEdicion.setText(documento);
                }
            }
        
    }

    public String LeerArchivo(String ruta) {
        String temp = "";
        try {
            BufferedReader bf = new BufferedReader(new FileReader(ruta));
            String bfRead;
            while ((bfRead = bf.readLine()) != null) {
                temp = temp + bfRead + "\n";
            }
        } catch (Exception e) {
        }
        return temp;
    }
    
    
    
    
    
    public void ReiniciarMemoria() {
        listaError.clear();
        listaError.trimToSize();
        ErrorSintactico.clear();
        ErrorSintactico.trimToSize();
        imprimir.clear();
        imprimir.trimToSize();
        resultado ="";
    }

    public void Ejecutar() {
        this.ReiniciarMemoria();
        Lexico lx = new Lexico(new BufferedReader(new StringReader(txtEdicion.getText())));

        Sintactico sin = new Sintactico(lx);
        try {

            sin.parse();

        } catch (Exception ex) {
            Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
        }

        if (listaError.isEmpty() && ErrorSintactico.isEmpty()) {

            JOptionPane.showMessageDialog(null, "La gramatica esta correcta");
            Nodo raiz = Sintactico.padre;
            Graficar(raiz);
            RecorrerAst ast = new RecorrerAst();
            ast.Ejecutar(raiz);
            int i; 
            for(i=0;i<imprimir.size();i++){
               resultado +=imprimir.get(i).Valor.toString()+"\n";
             }   
        } else {
            JOptionPane.showMessageDialog(null, "La gramatica No es correcta");
        }
      txtConsola.setText(resultado);
          
    }

    public static String recorrerarbol(Nodo raiz) {
        String cuerpo = "";
        for (Nodo hijos : raiz.getHijos()) {
            if ( hijos.getValor() != null) {
                cuerpo += "\"" + raiz.getIdNod() + "\"" + " [label=\"" + raiz.getEtiqueta() + "\"]";
                cuerpo += "\"" + hijos.getIdNod() + "\"" + " [label=\"" + hijos.getValor() + "\"]";
                cuerpo += "\"" + raiz.getIdNod() + "\" -> " + "\"" + hijos.getIdNod() + "\"";
                cuerpo += recorrerarbol(hijos);
            }
        }
        return cuerpo;
    }

    public void Graficar(Nodo raiz) {
        try {
            String ruta = "Arbol.dot";
            FileWriter fw = new FileWriter(ruta);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(
                    " digraph G {\n"
                    + "     rankdir=TB; "
                    + "" + " node[ shape=record,  style=filled ,fillcolor=seashell2, fontcolor=black, color=coral1];  \n"
                    + "edge[color=chartreuse1] \n"
            );
           /*
           bw.write( 
                    "digraph G { \n"
                            + "node[shape=oval,fontcolor=black, style=filled, color=coral1];"
                            + " edge[color=chartreuse1];"
                            + "rankdir=UD \n"
            );
             */
            bw.write(recorrerarbol(raiz) + "\n" + "}");
            bw.close();
            fw.close();

            ProcessBuilder pbuilder;
            pbuilder = new ProcessBuilder("dot", "-Tpng", "-o", "Arbol.png", "Arbol.dot");
            pbuilder.redirectErrorStream(true);
            //Ejecuta el proceso
            pbuilder.start();
            pbuilder = new ProcessBuilder("eog", "Arbol.png");
            pbuilder.redirectErrorStream(true);
            //Ejecuta el proceso
            pbuilder.start();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JTextArea txtEdicion;
    // End of variables declaration//GEN-END:variables
}
